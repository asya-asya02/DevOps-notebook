<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="NOTEBOOKDataSet1" targetNamespace="http://tempuri.org/NOTEBOOKDataSet12.xsd" xmlns:mstns="http://tempuri.org/NOTEBOOKDataSet12.xsd" xmlns="http://tempuri.org/NOTEBOOKDataSet12.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="1" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="NOTEBOOKConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="NOTEBOOKConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Vybor_noutbuka.Properties.Settings.GlobalReference.Default.NOTEBOOKConnectionString" Provider="System.Data.SqlClient" />
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="notebookConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="notebookConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Vybor_noutbuka.Properties.Settings.GlobalReference.Default.notebookConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="bluetoothTableAdapter" GeneratorDataComponentClassName="bluetoothTableAdapter" Name="bluetooth" UserDataComponentName="bluetoothTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NOTEBOOKConnectionString (Settings)" DbObjectName="notebook.dbo.bluetooth" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[bluetooth] WHERE (((@IsNull_bluetooth = 1 AND [bluetooth] IS NULL) OR ([bluetooth] = @Original_bluetooth)) AND ([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_bluetooth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bluetooth" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_bluetooth" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bluetooth" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[bluetooth] ([bluetooth]) VALUES (@bluetooth);
SELECT bluetooth, id FROM bluetooth WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@bluetooth" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bluetooth" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT bluetooth, id FROM dbo.bluetooth</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[bluetooth] SET [bluetooth] = @bluetooth WHERE (((@IsNull_bluetooth = 1 AND [bluetooth] IS NULL) OR ([bluetooth] = @Original_bluetooth)) AND ([id] = @Original_id));
SELECT bluetooth, id FROM bluetooth WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@bluetooth" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bluetooth" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_bluetooth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bluetooth" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_bluetooth" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bluetooth" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="notebook.dbo.bluetooth" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="bluetooth" DataSetColumn="bluetooth" />
              <Mapping SourceColumn="id" DataSetColumn="id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DiagonalTableAdapter" GeneratorDataComponentClassName="DiagonalTableAdapter" Name="Diagonal" UserDataComponentName="DiagonalTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NOTEBOOKConnectionString (Settings)" DbObjectName="notebook.dbo.Diagonal" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Diagonal] WHERE (((@IsNull_Diagonal = 1 AND [Diagonal] IS NULL) OR ([Diagonal] = @Original_Diagonal)) AND ([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Diagonal" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Diagonal" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Diagonal" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Diagonal" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Diagonal] ([Diagonal]) VALUES (@Diagonal);
SELECT Diagonal, id FROM Diagonal WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Diagonal" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Diagonal" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Diagonal, id FROM dbo.Diagonal</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Diagonal] SET [Diagonal] = @Diagonal WHERE (((@IsNull_Diagonal = 1 AND [Diagonal] IS NULL) OR ([Diagonal] = @Original_Diagonal)) AND ([id] = @Original_id));
SELECT Diagonal, id FROM Diagonal WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Diagonal" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Diagonal" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Diagonal" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Diagonal" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Diagonal" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Diagonal" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="notebook.dbo.Diagonal" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Diagonal" DataSetColumn="Diagonal" />
              <Mapping SourceColumn="id" DataSetColumn="id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DiskTableAdapter" GeneratorDataComponentClassName="DiskTableAdapter" Name="Disk" UserDataComponentName="DiskTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NOTEBOOKConnectionString (Settings)" DbObjectName="notebook.dbo.[Disk]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Disk] WHERE (((@IsNull_Disk = 1 AND [Disk] IS NULL) OR ([Disk] = @Original_Disk)) AND ([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Disk" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Disk" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Disk" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Disk" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Disk] ([Disk]) VALUES (@Disk);
SELECT [Disk], id FROM [Disk] WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Disk" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Disk" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [Disk], id FROM dbo.[Disk]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Disk] SET [Disk] = @Disk WHERE (((@IsNull_Disk = 1 AND [Disk] IS NULL) OR ([Disk] = @Original_Disk)) AND ([id] = @Original_id));
SELECT [Disk], id FROM [Disk] WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Disk" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Disk" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Disk" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Disk" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Disk" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Disk" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="notebook.dbo.[Disk]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Disk" DataSetColumn="Disk" />
              <Mapping SourceColumn="id" DataSetColumn="id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="FirmTableAdapter" GeneratorDataComponentClassName="FirmTableAdapter" Name="Firm" UserDataComponentName="FirmTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NOTEBOOKConnectionString (Settings)" DbObjectName="notebook.dbo.Firm" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Firm] WHERE (([id] = @Original_id) AND ((@IsNull_Firm = 1 AND [Firm] IS NULL) OR ([Firm] = @Original_Firm)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Firm" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Firm" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Firm" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Firm" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Firm] ([Firm]) VALUES (@Firm);
SELECT id, Firm FROM Firm WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Firm" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Firm" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Firm FROM dbo.Firm</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Firm] SET [Firm] = @Firm WHERE (([id] = @Original_id) AND ((@IsNull_Firm = 1 AND [Firm] IS NULL) OR ([Firm] = @Original_Firm)));
SELECT id, Firm FROM Firm WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Firm" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Firm" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Firm" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Firm" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Firm" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Firm" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="notebook.dbo.Firm" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Firm" DataSetColumn="Firm" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="HDDTableAdapter" GeneratorDataComponentClassName="HDDTableAdapter" Name="HDD" UserDataComponentName="HDDTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NOTEBOOKConnectionString (Settings)" DbObjectName="notebook.dbo.HDD" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[HDD] WHERE (((@IsNull_HDD = 1 AND [HDD] IS NULL) OR ([HDD] = @Original_HDD)) AND ([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_HDD" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HDD" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_HDD" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="HDD" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[HDD] ([HDD]) VALUES (@HDD);
SELECT HDD, id FROM HDD WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@HDD" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="HDD" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT HDD, id FROM dbo.HDD</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[HDD] SET [HDD] = @HDD WHERE (((@IsNull_HDD = 1 AND [HDD] IS NULL) OR ([HDD] = @Original_HDD)) AND ([id] = @Original_id));
SELECT HDD, id FROM HDD WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@HDD" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="HDD" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_HDD" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HDD" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_HDD" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="HDD" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="notebook.dbo.HDD" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="HDD" DataSetColumn="HDD" />
              <Mapping SourceColumn="id" DataSetColumn="id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MoneyTableAdapter" GeneratorDataComponentClassName="MoneyTableAdapter" Name="Money" UserDataComponentName="MoneyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NOTEBOOKConnectionString (Settings)" DbObjectName="notebook.dbo.Money" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Money] WHERE (((@IsNull_Money = 1 AND [Money] IS NULL) OR ([Money] = @Original_Money)) AND ([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Money" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Money" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Money" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Money" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Money] ([Money]) VALUES (@Money);
SELECT Money, id FROM Money WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Money" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Money" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Money, id FROM dbo.Money</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Money] SET [Money] = @Money WHERE (((@IsNull_Money = 1 AND [Money] IS NULL) OR ([Money] = @Original_Money)) AND ([id] = @Original_id));
SELECT Money, id FROM Money WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Money" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Money" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Money" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Money" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Money" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Money" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="notebook.dbo.Money" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Money" DataSetColumn="Money" />
              <Mapping SourceColumn="id" DataSetColumn="id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="NotebookTableAdapter" GeneratorDataComponentClassName="NotebookTableAdapter" Name="Notebook" UserDataComponentName="NotebookTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NOTEBOOKConnectionString (Settings)" DbObjectName="notebook.dbo.Notebook" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Notebook] ([Notebook], [Parameters], [Price], [id_firm]) VALUES (@Notebook, @Parameters, @Price, @id_firm)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Notebook" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Notebook" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Parameters" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Parameters" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_firm" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_firm" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Notebook, Parameters, Price, id_firm FROM dbo.Notebook</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Notebook" DataSetColumn="Notebook" />
              <Mapping SourceColumn="Parameters" DataSetColumn="Parameters" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
              <Mapping SourceColumn="id_firm" DataSetColumn="id_firm" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OperativTableAdapter" GeneratorDataComponentClassName="OperativTableAdapter" Name="Operativ" UserDataComponentName="OperativTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="notebookConnectionString1 (Settings)" DbObjectName="notebook.dbo.Operativ" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Operativ] WHERE (((@IsNull_Operativ_pam = 1 AND [Operativ_pam] IS NULL) OR ([Operativ_pam] = @Original_Operativ_pam)) AND ([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Operativ_pam" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Operativ_pam" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Operativ_pam" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Operativ_pam" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Operativ] ([Operativ_pam]) VALUES (@Operativ_pam);
SELECT Operativ_pam, id FROM Operativ WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Operativ_pam" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Operativ_pam" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     Operativ_pam, id
FROM         Operativ</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Operativ] SET [Operativ_pam] = @Operativ_pam WHERE (((@IsNull_Operativ_pam = 1 AND [Operativ_pam] IS NULL) OR ([Operativ_pam] = @Original_Operativ_pam)) AND ([id] = @Original_id));
SELECT Operativ_pam, id FROM Operativ WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Operativ_pam" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Operativ_pam" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Operativ_pam" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Operativ_pam" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Operativ_pam" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Operativ_pam" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="notebook.dbo.Operativ" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Operativ_pam" DataSetColumn="Operativ_pam" />
              <Mapping SourceColumn="id" DataSetColumn="id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OSTableAdapter" GeneratorDataComponentClassName="OSTableAdapter" Name="OS" UserDataComponentName="OSTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NOTEBOOKConnectionString (Settings)" DbObjectName="notebook.dbo.OS" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[OS] WHERE (((@IsNull_OS = 1 AND [OS] IS NULL) OR ([OS] = @Original_OS)) AND ([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_OS" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OS" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_OS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="OS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[OS] ([OS]) VALUES (@OS);
SELECT OS, id FROM OS WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@OS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="OS" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT OS, id FROM dbo.OS</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[OS] SET [OS] = @OS WHERE (((@IsNull_OS = 1 AND [OS] IS NULL) OR ([OS] = @Original_OS)) AND ([id] = @Original_id));
SELECT OS, id FROM OS WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@OS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="OS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_OS" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OS" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_OS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="OS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="notebook.dbo.OS" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="OS" DataSetColumn="OS" />
              <Mapping SourceColumn="id" DataSetColumn="id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProcessorTableAdapter" GeneratorDataComponentClassName="ProcessorTableAdapter" Name="Processor" UserDataComponentName="ProcessorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NOTEBOOKConnectionString (Settings)" DbObjectName="notebook.dbo.Processor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Processor] WHERE (((@IsNull_Proc = 1 AND [Proc] IS NULL) OR ([Proc] = @Original_Proc)) AND ([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Proc" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Proc" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Proc" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Proc" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Processor] ([Proc]) VALUES (@Proc);
SELECT [Proc], id FROM Processor WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Proc" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Proc" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [Proc], id FROM dbo.Processor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Processor] SET [Proc] = @Proc WHERE (((@IsNull_Proc = 1 AND [Proc] IS NULL) OR ([Proc] = @Original_Proc)) AND ([id] = @Original_id));
SELECT [Proc], id FROM Processor WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Proc" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Proc" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Proc" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Proc" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Proc" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Proc" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="notebook.dbo.Processor" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Proc" DataSetColumn="Proc" />
              <Mapping SourceColumn="id" DataSetColumn="id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tipTableAdapter" GeneratorDataComponentClassName="tipTableAdapter" Name="tip" UserDataComponentName="tipTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NOTEBOOKConnectionString (Settings)" DbObjectName="notebook.dbo.tip" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tip] WHERE (([id] = @Original_id) AND ((@IsNull_tip = 1 AND [tip] IS NULL) OR ([tip] = @Original_tip)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_tip" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tip" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_tip" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tip" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tip] ([tip]) VALUES (@tip);
SELECT id, tip FROM tip WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@tip" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tip" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, tip FROM dbo.tip</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tip] SET [tip] = @tip WHERE (([id] = @Original_id) AND ((@IsNull_tip = 1 AND [tip] IS NULL) OR ([tip] = @Original_tip)));
SELECT id, tip FROM tip WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@tip" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tip" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_tip" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tip" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_tip" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tip" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="notebook.dbo.tip" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="tip" DataSetColumn="tip" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableAdapter" GeneratorDataComponentClassName="UsersTableAdapter" Name="Users" UserDataComponentName="UsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NOTEBOOKConnectionString (Settings)" DbObjectName="notebook.dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Users] WHERE (([id] = @Original_id) AND ((@IsNull_FIO = 1 AND [FIO] IS NULL) OR ([FIO] = @Original_FIO)) AND ((@IsNull_Login = 1 AND [Login] IS NULL) OR ([Login] = @Original_Login)) AND ((@IsNull_Hash_Pwd = 1 AND [Hash_Pwd] IS NULL) OR ([Hash_Pwd] = @Original_Hash_Pwd)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_FIO" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FIO" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FIO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FIO" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Login" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Hash_Pwd" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Hash_Pwd" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Hash_Pwd" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Hash_Pwd" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Users] ([FIO], [Login], [Hash_Pwd]) VALUES (@FIO, @Login, @Hash_Pwd);
SELECT id, FIO, Login, Hash_Pwd FROM Users WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FIO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FIO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Hash_Pwd" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Hash_Pwd" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, FIO, Login, Hash_Pwd FROM dbo.Users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Users] SET [FIO] = @FIO, [Login] = @Login, [Hash_Pwd] = @Hash_Pwd WHERE (([id] = @Original_id) AND ((@IsNull_FIO = 1 AND [FIO] IS NULL) OR ([FIO] = @Original_FIO)) AND ((@IsNull_Login = 1 AND [Login] IS NULL) OR ([Login] = @Original_Login)) AND ((@IsNull_Hash_Pwd = 1 AND [Hash_Pwd] IS NULL) OR ([Hash_Pwd] = @Original_Hash_Pwd)));
SELECT id, FIO, Login, Hash_Pwd FROM Users WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FIO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FIO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Hash_Pwd" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Hash_Pwd" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_FIO" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FIO" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FIO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FIO" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Login" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Hash_Pwd" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Hash_Pwd" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Hash_Pwd" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Hash_Pwd" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="notebook.dbo.Users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="FIO" DataSetColumn="FIO" />
              <Mapping SourceColumn="Login" DataSetColumn="Login" />
              <Mapping SourceColumn="Hash_Pwd" DataSetColumn="Hash_Pwd" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsingTableAdapter" GeneratorDataComponentClassName="UsingTableAdapter" Name="Using" UserDataComponentName="UsingTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NOTEBOOKConnectionString (Settings)" DbObjectName="notebook.dbo.Using" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Using] WHERE (((@IsNull_using = 1 AND [using] IS NULL) OR ([using] = @Original_using)) AND ([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_using" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="using" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_using" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="using" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Using] ([using]) VALUES (@using);
SELECT using, id FROM Using WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@using" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="using" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT using, id FROM dbo.Using</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Using] SET [using] = @using WHERE (((@IsNull_using = 1 AND [using] IS NULL) OR ([using] = @Original_using)) AND ([id] = @Original_id));
SELECT using, id FROM Using WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@using" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="using" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_using" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="using" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_using" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="using" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="notebook.dbo.Using" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="using" DataSetColumn="using" />
              <Mapping SourceColumn="id" DataSetColumn="id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="VoprosTableAdapter" GeneratorDataComponentClassName="VoprosTableAdapter" Name="Vopros" UserDataComponentName="VoprosTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NOTEBOOKConnectionString (Settings)" DbObjectName="notebook.dbo.Vopros" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Vopros] ([Vopr]) VALUES (@Vopr)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Vopr" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Vopr" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Vopr FROM dbo.Vopros</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Vopr" DataSetColumn="Vopr" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="NOTEBOOKDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="NOTEBOOKDataSet1" msprop:Generator_UserDSName="NOTEBOOKDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="bluetooth" msprop:Generator_TableClassName="bluetoothDataTable" msprop:Generator_TableVarName="tablebluetooth" msprop:Generator_RowChangedName="bluetoothRowChanged" msprop:Generator_TablePropName="bluetooth" msprop:Generator_RowDeletingName="bluetoothRowDeleting" msprop:Generator_RowChangingName="bluetoothRowChanging" msprop:Generator_RowEvHandlerName="bluetoothRowChangeEventHandler" msprop:Generator_RowDeletedName="bluetoothRowDeleted" msprop:Generator_RowClassName="bluetoothRow" msprop:Generator_UserTableName="bluetooth" msprop:Generator_RowEvArgName="bluetoothRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="bluetooth" msprop:Generator_ColumnVarNameInTable="columnbluetooth" msprop:Generator_ColumnPropNameInRow="bluetooth" msprop:Generator_ColumnPropNameInTable="bluetoothColumn" msprop:Generator_UserColumnName="bluetooth" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Diagonal" msprop:Generator_TableClassName="DiagonalDataTable" msprop:Generator_TableVarName="tableDiagonal" msprop:Generator_RowChangedName="DiagonalRowChanged" msprop:Generator_TablePropName="Diagonal" msprop:Generator_RowDeletingName="DiagonalRowDeleting" msprop:Generator_RowChangingName="DiagonalRowChanging" msprop:Generator_RowEvHandlerName="DiagonalRowChangeEventHandler" msprop:Generator_RowDeletedName="DiagonalRowDeleted" msprop:Generator_RowClassName="DiagonalRow" msprop:Generator_UserTableName="Diagonal" msprop:Generator_RowEvArgName="DiagonalRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Diagonal" msprop:Generator_ColumnVarNameInTable="columnDiagonal" msprop:Generator_ColumnPropNameInRow="Diagonal" msprop:Generator_ColumnPropNameInTable="DiagonalColumn" msprop:Generator_UserColumnName="Diagonal" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Disk" msprop:Generator_TableClassName="DiskDataTable" msprop:Generator_TableVarName="tableDisk" msprop:Generator_RowChangedName="DiskRowChanged" msprop:Generator_TablePropName="Disk" msprop:Generator_RowDeletingName="DiskRowDeleting" msprop:Generator_RowChangingName="DiskRowChanging" msprop:Generator_RowEvHandlerName="DiskRowChangeEventHandler" msprop:Generator_RowDeletedName="DiskRowDeleted" msprop:Generator_RowClassName="DiskRow" msprop:Generator_UserTableName="Disk" msprop:Generator_RowEvArgName="DiskRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Disk" msprop:Generator_ColumnVarNameInTable="columnDisk" msprop:Generator_ColumnPropNameInRow="Disk" msprop:Generator_ColumnPropNameInTable="DiskColumn" msprop:Generator_UserColumnName="Disk" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Firm" msprop:Generator_TableClassName="FirmDataTable" msprop:Generator_TableVarName="tableFirm" msprop:Generator_RowChangedName="FirmRowChanged" msprop:Generator_TablePropName="Firm" msprop:Generator_RowDeletingName="FirmRowDeleting" msprop:Generator_RowChangingName="FirmRowChanging" msprop:Generator_RowEvHandlerName="FirmRowChangeEventHandler" msprop:Generator_RowDeletedName="FirmRowDeleted" msprop:Generator_RowClassName="FirmRow" msprop:Generator_UserTableName="Firm" msprop:Generator_RowEvArgName="FirmRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Firm" msprop:Generator_ColumnVarNameInTable="columnFirm" msprop:Generator_ColumnPropNameInRow="Firm" msprop:Generator_ColumnPropNameInTable="FirmColumn" msprop:Generator_UserColumnName="Firm" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="HDD" msprop:Generator_TableClassName="HDDDataTable" msprop:Generator_TableVarName="tableHDD" msprop:Generator_RowChangedName="HDDRowChanged" msprop:Generator_TablePropName="HDD" msprop:Generator_RowDeletingName="HDDRowDeleting" msprop:Generator_RowChangingName="HDDRowChanging" msprop:Generator_RowEvHandlerName="HDDRowChangeEventHandler" msprop:Generator_RowDeletedName="HDDRowDeleted" msprop:Generator_RowClassName="HDDRow" msprop:Generator_UserTableName="HDD" msprop:Generator_RowEvArgName="HDDRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="HDD" msprop:Generator_ColumnVarNameInTable="columnHDD" msprop:Generator_ColumnPropNameInRow="HDD" msprop:Generator_ColumnPropNameInTable="HDDColumn" msprop:Generator_UserColumnName="HDD" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Money" msprop:Generator_TableClassName="MoneyDataTable" msprop:Generator_TableVarName="tableMoney" msprop:Generator_RowChangedName="MoneyRowChanged" msprop:Generator_TablePropName="Money" msprop:Generator_RowDeletingName="MoneyRowDeleting" msprop:Generator_RowChangingName="MoneyRowChanging" msprop:Generator_RowEvHandlerName="MoneyRowChangeEventHandler" msprop:Generator_RowDeletedName="MoneyRowDeleted" msprop:Generator_RowClassName="MoneyRow" msprop:Generator_UserTableName="Money" msprop:Generator_RowEvArgName="MoneyRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Money" msprop:Generator_ColumnVarNameInTable="columnMoney" msprop:Generator_ColumnPropNameInRow="Money" msprop:Generator_ColumnPropNameInTable="MoneyColumn" msprop:Generator_UserColumnName="Money" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Notebook" msprop:Generator_TableClassName="NotebookDataTable" msprop:Generator_TableVarName="tableNotebook" msprop:Generator_RowChangedName="NotebookRowChanged" msprop:Generator_TablePropName="Notebook" msprop:Generator_RowDeletingName="NotebookRowDeleting" msprop:Generator_RowChangingName="NotebookRowChanging" msprop:Generator_RowEvHandlerName="NotebookRowChangeEventHandler" msprop:Generator_RowDeletedName="NotebookRowDeleted" msprop:Generator_RowClassName="NotebookRow" msprop:Generator_UserTableName="Notebook" msprop:Generator_RowEvArgName="NotebookRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Notebook" msprop:Generator_ColumnVarNameInTable="columnNotebook" msprop:Generator_ColumnPropNameInRow="Notebook" msprop:Generator_ColumnPropNameInTable="NotebookColumn" msprop:Generator_UserColumnName="Notebook" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Parameters" msprop:Generator_ColumnVarNameInTable="columnParameters" msprop:Generator_ColumnPropNameInRow="Parameters" msprop:Generator_ColumnPropNameInTable="ParametersColumn" msprop:Generator_UserColumnName="Parameters" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="9" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id_firm" msprop:Generator_ColumnVarNameInTable="columnid_firm" msprop:Generator_ColumnPropNameInRow="id_firm" msprop:Generator_ColumnPropNameInTable="id_firmColumn" msprop:Generator_UserColumnName="id_firm" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Operativ" msprop:Generator_TableClassName="OperativDataTable" msprop:Generator_TableVarName="tableOperativ" msprop:Generator_RowChangedName="OperativRowChanged" msprop:Generator_TablePropName="Operativ" msprop:Generator_RowDeletingName="OperativRowDeleting" msprop:Generator_RowChangingName="OperativRowChanging" msprop:Generator_RowEvHandlerName="OperativRowChangeEventHandler" msprop:Generator_RowDeletedName="OperativRowDeleted" msprop:Generator_RowClassName="OperativRow" msprop:Generator_UserTableName="Operativ" msprop:Generator_RowEvArgName="OperativRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Operativ_pam" msprop:Generator_ColumnVarNameInTable="columnOperativ_pam" msprop:Generator_ColumnPropNameInRow="Operativ_pam" msprop:Generator_ColumnPropNameInTable="Operativ_pamColumn" msprop:Generator_UserColumnName="Operativ_pam" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="OS" msprop:Generator_TableClassName="OSDataTable" msprop:Generator_TableVarName="tableOS" msprop:Generator_RowChangedName="OSRowChanged" msprop:Generator_TablePropName="OS" msprop:Generator_RowDeletingName="OSRowDeleting" msprop:Generator_RowChangingName="OSRowChanging" msprop:Generator_RowEvHandlerName="OSRowChangeEventHandler" msprop:Generator_RowDeletedName="OSRowDeleted" msprop:Generator_RowClassName="OSRow" msprop:Generator_UserTableName="OS" msprop:Generator_RowEvArgName="OSRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OS" msprop:Generator_ColumnVarNameInTable="columnOS" msprop:Generator_ColumnPropNameInRow="OS" msprop:Generator_ColumnPropNameInTable="OSColumn" msprop:Generator_UserColumnName="OS" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Processor" msprop:Generator_TableClassName="ProcessorDataTable" msprop:Generator_TableVarName="tableProcessor" msprop:Generator_RowChangedName="ProcessorRowChanged" msprop:Generator_TablePropName="Processor" msprop:Generator_RowDeletingName="ProcessorRowDeleting" msprop:Generator_RowChangingName="ProcessorRowChanging" msprop:Generator_RowEvHandlerName="ProcessorRowChangeEventHandler" msprop:Generator_RowDeletedName="ProcessorRowDeleted" msprop:Generator_RowClassName="ProcessorRow" msprop:Generator_UserTableName="Processor" msprop:Generator_RowEvArgName="ProcessorRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Proc" msprop:Generator_ColumnVarNameInTable="columnProc" msprop:Generator_ColumnPropNameInRow="Proc" msprop:Generator_ColumnPropNameInTable="ProcColumn" msprop:Generator_UserColumnName="Proc" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tip" msprop:Generator_TableClassName="tipDataTable" msprop:Generator_TableVarName="tabletip" msprop:Generator_RowChangedName="tipRowChanged" msprop:Generator_TablePropName="tip" msprop:Generator_RowDeletingName="tipRowDeleting" msprop:Generator_RowChangingName="tipRowChanging" msprop:Generator_RowEvHandlerName="tipRowChangeEventHandler" msprop:Generator_RowDeletedName="tipRowDeleted" msprop:Generator_RowClassName="tipRow" msprop:Generator_UserTableName="tip" msprop:Generator_RowEvArgName="tipRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="tip" msprop:Generator_ColumnVarNameInTable="columntip" msprop:Generator_ColumnPropNameInRow="tip" msprop:Generator_ColumnPropNameInTable="tipColumn" msprop:Generator_UserColumnName="tip" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Users" msprop:Generator_TableClassName="UsersDataTable" msprop:Generator_TableVarName="tableUsers" msprop:Generator_RowChangedName="UsersRowChanged" msprop:Generator_TablePropName="Users" msprop:Generator_RowDeletingName="UsersRowDeleting" msprop:Generator_RowChangingName="UsersRowChanging" msprop:Generator_RowEvHandlerName="UsersRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersRowDeleted" msprop:Generator_RowClassName="UsersRow" msprop:Generator_UserTableName="Users" msprop:Generator_RowEvArgName="UsersRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="FIO" msprop:Generator_ColumnVarNameInTable="columnFIO" msprop:Generator_ColumnPropNameInRow="FIO" msprop:Generator_ColumnPropNameInTable="FIOColumn" msprop:Generator_UserColumnName="FIO" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Login" msprop:Generator_ColumnVarNameInTable="columnLogin" msprop:Generator_ColumnPropNameInRow="Login" msprop:Generator_ColumnPropNameInTable="LoginColumn" msprop:Generator_UserColumnName="Login" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Hash_Pwd" msprop:Generator_ColumnVarNameInTable="columnHash_Pwd" msprop:Generator_ColumnPropNameInRow="Hash_Pwd" msprop:Generator_ColumnPropNameInTable="Hash_PwdColumn" msprop:Generator_UserColumnName="Hash_Pwd" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Using" msprop:Generator_TableClassName="UsingDataTable" msprop:Generator_TableVarName="tableUsing" msprop:Generator_RowChangedName="UsingRowChanged" msprop:Generator_TablePropName="Using" msprop:Generator_RowDeletingName="UsingRowDeleting" msprop:Generator_RowChangingName="UsingRowChanging" msprop:Generator_RowEvHandlerName="UsingRowChangeEventHandler" msprop:Generator_RowDeletedName="UsingRowDeleted" msprop:Generator_RowClassName="UsingRow" msprop:Generator_UserTableName="Using" msprop:Generator_RowEvArgName="UsingRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="using" msprop:Generator_ColumnVarNameInTable="columnusing" msprop:Generator_ColumnPropNameInRow="_using" msprop:Generator_ColumnPropNameInTable="usingColumn" msprop:Generator_UserColumnName="using" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Vopros" msprop:Generator_TableClassName="VoprosDataTable" msprop:Generator_TableVarName="tableVopros" msprop:Generator_RowChangedName="VoprosRowChanged" msprop:Generator_TablePropName="Vopros" msprop:Generator_RowDeletingName="VoprosRowDeleting" msprop:Generator_RowChangingName="VoprosRowChanging" msprop:Generator_RowEvHandlerName="VoprosRowChangeEventHandler" msprop:Generator_RowDeletedName="VoprosRowDeleted" msprop:Generator_RowClassName="VoprosRow" msprop:Generator_UserTableName="Vopros" msprop:Generator_RowEvArgName="VoprosRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Vopr" msprop:Generator_ColumnVarNameInTable="columnVopr" msprop:Generator_ColumnPropNameInRow="Vopr" msprop:Generator_ColumnPropNameInTable="VoprColumn" msprop:Generator_UserColumnName="Vopr" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:bluetooth" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Diagonal_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Diagonal" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Disk_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Disk" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Firm_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Firm" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="HDD_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:HDD" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Money_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Money" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Operativ_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Operativ" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="OS_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:OS" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Processor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Processor" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="tip_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tip" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Users" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Using_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Using" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Notebook_Firm" msdata:parent="Firm" msdata:child="Notebook" msdata:parentkey="id" msdata:childkey="id_firm" msprop:Generator_UserChildTable="Notebook" msprop:Generator_ChildPropName="GetNotebookRows" msprop:Generator_UserRelationName="FK_Notebook_Firm" msprop:Generator_RelationVarName="relationFK_Notebook_Firm" msprop:Generator_UserParentTable="Firm" msprop:Generator_ParentPropName="FirmRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>